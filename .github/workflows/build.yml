name: Build EXE and attach to Release

on:
  release:
    types: [published]     # parte quando pubblichi una Release
  workflow_dispatch:       # fallback: puoi lanciarlo a mano
    inputs:
      tag:
        description: 'Tag della release (es: v1.1.2)'
        required: true

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout at tag
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name || inputs.tag }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Python compile check
        run: |
          # Verifica che il file esista
          if (Test-Path src/main.py) {
            echo "Compiling src/main.py..."
            python -m py_compile src/main.py
          } else {
            echo "Error: src/main.py not found"
            exit 1
          }

      - name: Prepare build environment
        run: |
          mkdir build
          cd build
          cp -r ../src .
          cp ../requirements.txt .
          
      - name: Build EXE (PyInstaller)
        working-directory: build
        run: |
          pyinstaller --clean --onefile --noconsole --name sapcar_unpacker `
            --add-data "src;." `
            --hidden-import customtkinter `
            --hidden-import PIL `
            --hidden-import PIL._tkinter_finder `
            --collect-all customtkinter `
            --paths "src" `
            src/main.py

      - name: List build outputs (debug)
        run: |
          echo "Working directory:"
          pwd
          dir
          echo "Build directory:"
          dir build
          echo "Build/dist directory:"
          dir build/dist

      - name: Upload EXE to the Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.release.tag_name || inputs.tag }}
          files: |
            build/dist/sapcar_unpacker.exe
          fail_on_unmatched_files: true
